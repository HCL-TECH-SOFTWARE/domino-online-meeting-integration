<?xml version='1.0' encoding='utf-8'?>
<agent name='99. Admin\02. Clean up Target Mail Db' alias='uninstallDOMI'
 xmlns='http://www.lotus.com/dxl' version='11.0' maintenanceversion='1.0'
 replicaid='8525867000756EB9' hide='v3' publicaccess='false' designerversion='8.5.3'>
<noteinfo noteid='1cda' unid='C12304FE02F0E6F18525868500472CAC' sequence='70'>
<created><datetime>20210223T075724,92-05</datetime></created>
<modified><datetime dst='true'>20210329T124641,22+01</datetime></modified>
<revised><datetime>20210322T100408,78-05</datetime></revised>
<lastaccessed><datetime dst='true'>20210329T124641,21+01</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20210329T124641,21+01</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Rocky Oliver/OU=USA/O=PNPHCL</name></updatedby>
<wassignedby><name>CN=Rocky Oliver/OU=USA/O=PNPHCL</name></wassignedby>
<designchange><datetime>20210322T100408,78-05</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='runonce'/><code event='options'><lotusscript>%REM
	Agent Install DOMI in Target Mail Db
	Created Feb 16, 2021 by Rocky Oliver/USA/PNPHCL
	Description: This agent is used to install the design elements needed for DOMI into the desired mail database
	or template. 
%END REM
Option Public
Option Declare

Use "dxlUtilsBE"
Use "domiUtilsBE"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Dim s As New NotesSession, ws As New NotesUIWorkspace
	Dim thisDb As NotesDatabase, mailDb As NotesDatabase
	Dim deView As NotesView, deDoc As NotesDocument
	Dim dbPathInfo As Variant, deTypes List As String
	Dim deType As String, deName As String, deUNID As String
	Dim oldNote As NotesDocument, newNote As NotesDocument
	Dim rbool As Boolean
	
	On Error GoTo errHandler
	
	Set thisDb = s.Currentdatabase
	Set deView = thisDb.getView("beFeatureSetDEProfiles")
	If deView Is Nothing Then Error 1000, "Unable to find Design Element Profile view"
	deView.Autoupdate = False
	
	' prompt for target mail db
	' 13 is the value for ChooseDatabase
	dbPathInfo = ws.Prompt(13, "Choose Mail Database", "Choose the Mail database or template")
	If IsArray(dbPathInfo) Then
		Set mailDb = s.Getdatabase(dbPathInfo(0), dbPathInfo(1), False)
		If Not(mailDb.Isopen) Then Error 1000, "Unable to open selected database"
	Else
		Exit Sub
	End If
	
	deTypes("AGENT - LS") = "agent"
	deTypes("FORM") = "form"
	deTypes("SCRIPT LIBRARY - LS") = "scriptlib"
	deTypes("SUBFORM") = "subform"
	deTypes("VIEW") = "view"
	
	Set deDoc = deView.Getfirstdocument()
	Do While Not(deDoc Is Nothing)
		Set oldNote = nothing
		deName = columnValStr(deDoc, 0)
		deType = columnValStr(deDoc, 2)
		deUNID = columnValStr(deDoc, 3)
		
		' first see if the element already exists - if it does, nuke it
		Set oldNote = getElementHandle(mailDb, deTypes(deType), deName)  ' in dxlUtilsBE
		If Not(oldNote Is Nothing) Then Call oldNote.RemovePermanently(True)
		Set oldNote = Nothing
		
		Set deDoc = deView.Getnextdocument(deDoc)
	Loop

	rbool = removeDOMISubformFromAppointment(mailDb)
	
	If rbool Then MsgBox "Target Mail Db cleaned up successfully",, "Success"
	
getOut:
	Exit Sub
errHandler:
	Select Case Err
		Case 1000
			MsgBox Error$,48 , "Error"
		Case Else
			MsgBox Error$ &amp; " (err: " &amp; Err &amp; ", erl: " &amp; Erl &amp; ")",48 , "Error"
	End Select
	Resume getOut
End Sub



</lotusscript></code><code event='removeDOMISubformFromAppointment'><lotusscript
>%REM
	Function removeDOMISubformFromAppointment
	Description: Removes the DOMI_onlineMeetingActions tag from the Calendar Entry DXL
%END REM
Function removeDOMISubformFromAppointment(mailDb As NotesDatabase) As Boolean
	Dim s As New NotesSession
	Dim formobj As NotesDOMParser, sform As String
	Dim oldform As NotesDocument
	Dim oldCode As String, newCode As String, sftag As String
	Dim fstream As NotesStream, formcode As String, lf As String
	Dim rlng As Long, rbool As Boolean, errtxt As string
	
	lf = Chr(10)
	oldCode = "&lt;/richtext&gt;&lt;/body&gt;"
	sftag = "&lt;subformref name='OMI_onlineMeetingActions | onlineMeetingActions'/&gt;"
	newCode = sftag &amp; lf &amp; oldCode

	Set oldform = getElementHandle(mailDb, "form", "(BACKUP-OMI-Appointment)")
	If Not(oldform Is Nothing) Then Call oldform.Removepermanently(True)
	Set oldform = nothing
	
	' getElementDXL(db As NotesDatabase, etype As String, formname As String, bkupkey As String, _
	' oldnote As NotesDocument) As NotesDOMParser
	Set formobj = getElementDXL(maildb, "form", "Appointment", "", oldform)  ' from dxlUtilsBE
	Set fstream = s.CreateStream
	' this part puts the form DXL into a string var
	Call formobj.setOutput(fstream)
	Call formobj.Serialize
	fstream.Position = 0
	formcode = fstream.ReadText
	Call fstream.Close
	
	' check to see if the tag is already in the subform; if so, our work here is done
	If InStr(1, formcode, sftag, 5) = 0 Then
		removeDOMISubformFromAppointment = True
		Exit Function
	End If

	formcode = Replace(formcode, newCode, oldCode)
	
	Set fstream = s.createStream
	rlng = fstream.Writetext(formcode)
	rbool = importDXLStream(mailDb, fstream, True, False, False, False)  ' from dxlUtilsBE
	
	removeDOMISubformFromAppointment = rbool
getOut:
	Exit Function
errHandler:
	removeDOMISubformFromAppointment = false
	errtxt = Error$ &amp; " [in: " &amp; GetThreadInfo(1) &amp; "; err: " &amp; Err &amp; "; line: " &amp; Erl &amp; "]"
	On Error GoTo 0

	Error Err, errtxt
	Resume getOut
End Function</lotusscript></code>
<rundata processeddocs='0' exitcode='0'>
<agentmodified><datetime>20210322T100408,73-05</datetime></agentmodified></rundata></agent>

