<?xml version='1.0' encoding='utf-8'?>
<agent name='(DOMI_deleteSTMeeting)' alias='DOMI_deleteSTMeeting' xmlns='http://www.lotus.com/dxl'
 version='12.0' replicaid='852586FE00669899' hide='v3' publicaccess='false'
 designerversion='8.5.3'>
<noteinfo noteid='182' unid='4FA24E7D57CEB099C88FEAFB9FE8DA1F' sequence='4'>
<created><datetime/></created>
<modified><datetime dst='true'>20210707T142210,89-04</datetime></modified>
<revised><datetime dst='true'>20210707T142210,88-04</datetime></revised>
<lastaccessed><datetime dst='true'>20210707T142210,88-04</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20210624T144044,37-04</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Devin Olson/OU=USA/O=PNPHCL</name></updatedby>
<wassignedby><name>CN=Devin Olson/OU=USA/O=PNPHCL</name></wassignedby>
<designchange><datetime dst='true'>20210707T142210,88-04</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='runonce'/><code event='options'><lotusscript>%REM
	Agent (DOMI_deleteSTMeeting)
	Created Mar 01, 2021 by Rocky Oliver/USA/PNPHCL
	Description: This agent is used to delete a Sametime meeting, and clean up all of the meta items 
	in the Calendar Entry doc itself
	
**************** LICENSE ****************
	Copyright 2021 HCL America, Inc.
	Licensed under the Apache License, Version 2.0 (the "License"); you may Not Use this file except 
	In compliance With the License. You may obtain a copy of the License at
	
	http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law Or agreed To In writing, software distributed under the License 
	Is distributed On an "AS IS" BASIS, WITHOUT WARRANTIES Or CONDITIONS OF Any KIND, either express 
	Or implied. See the License For the specific language governing permissions And limitations under 
	the License
%END REM
	
Option Public
Option Declare

Use "domiSTUtilsBE"
Use "domiUtilsFE"
Use "VoltMXHttpHelper" ' this is the wrapper lib for all libs/classes needed for Volt MX integration
Use "JSONDateTime"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Dim s As New NotesSession, ws As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument, curDoc As NotesDocument, credDoc As NotesDocument
	Dim thisDb As NotesDatabase, thisAgent As NotesAgent
	Dim urlMtg As String, urlBase As String, urlChk As String
	Dim tmpToken As String, tmpCookie As String, fullCookie As String
	Dim authToken As String
	Dim loginEmail As String
	Dim nrest As NotesRESTConsumer
	Dim jsonNav As NotesJSONNavigator
	Dim fldList List As Variant
	Dim hdrList As New stringList()
	Dim mtgName As String, mtgId As String
	Dim rstr As String, rlng As Long, rdbl As Double, rbool As Boolean, rdoc As NotesDocument, rint As Integer, rvar As Variant, emptyvar As Variant
	Dim errtxt As String
	
	On Error Goto errHandler
	Call instantiateDOMIlog() ' Instantiate Logging and set options for DOMI operations
	
	Set thisDb = s.Currentdatabase
	Set thisAgent = s.Currentagent
	Set curUIDoc = ws.Currentdocument
	If curUIDoc Is Nothing Then
		Error 1000, "Unable to get a handle to the current document"
	Else
		Set curDoc = curUIDoc.Document
	End If
	If Not(curDoc.getItemValue("Form")(0) = "Appointment") Then Error 1000, "This action must be run from a Calendar Entry"
	
	mtgId = Cstr(curDoc.getItemValue("meetingId")(0))
	If mtgId = "" Then Error 1000, "Unable to locate a meeting ID for this meeting"
	
	urlBase = DOMI_ROOTURL_SAMETIMEMEETINGS
	If urlBase = "" Then Error 1000, "The Sametime Meetings URL is not defined. Please contact your administrator."
	If Not(Right(urlBase, 1) = "/") Then urlBase = urlBase &amp; "/"
	urlMtg = urlBase &amp; "meeting-catalog/api/v1/meetings/" &amp; mtgId
	urlChk = urlBase &amp; "meeting-auth/api/v1/refresh"
	
refreshedToken:
	' get some tokens
	authToken = getServiceToken("sametime", DOMI_TOKEN_AUTH) ' in domiUtilsBE
	If authToken = "" Then Error 1000, "Problem obtaining auth Token from Online Meeting Credentials"
	tmpToken = authToken
	%REM
		Returns a list containing the following values:
		sametimeJwt=  the sametime JWT token
		sametimeRefresh= the sametime Refresh token
		x-csrf-token: the x-csrf-token needed for request Header
		_csrf= the csrf value for the request cookie
	%END REM
	rvar = getSTHeaderTokens(urlChk, tmpCookie, tmpToken)  ' in domiUtilsBE
	loginEmail = getServiceEmail("sametime")
	
	' headers needed for ST calls
	fullCookie = "_csrf=" &amp; rvar("_csrf=") &amp; "; sametimeJwt=" &amp; rvar("sametimeJwt=")
	hdrList.content("accept") = "application/json"
	hdrList.content("X-CSRF-Token") = rvar("x-csrf-token: ")
	hdrList.content("cookie") = fullCookie
	
	Set nrest = New NotesRESTConsumer(DOMI_JSON_NODES_EXCLUDE_FROM_LOG)  ' in NotesRESTConsumer
	Set jsonNav = s.Createjsonnavigator("")
	rstr = nrest.httpDELETE(urlMtg, hdrList, jsonNav)
	rint = nrcParseResponseCode(rstr)
	If rint &lt;&gt; 200 Then Error (1000 + rint), "Problem creating meeting (" &amp; rstr &amp; ")"
	
	fldList("meetingService") = ""
	fldList("meetingServiceLabel") = ""
	fldList("meetingId") = ""
	fldList("meetingPassword") = ""
	fldList("meetingTitle") = ""
	fldList("meetingAgenda") = ""
	fldList("meetingURL") = ""
	fldList("meetingStartStr") = ""
	fldList("meetingEndStr") = ""
	fldList("meetingDuration") = ""
	fldList("meetingJSON") = ""
	' these fields give us the "Join Online" link below the Location on the Calendar Entry
	fldList("OnlineMeeting") = ""
	fldList("ApptUNIDURL") = ""
	fldList("SametimeType") = ""
	fldList("meetingInfoInsert") = ""
	fldList("Location") = ""
	' now that we have all of our field values, update the Calendar Entry doc
	Forall f In fldList
		Call curDoc.Replaceitemvalue(Listtag(f), f)
	End Forall

	Call curUIDoc.Reload()
	
	' 64 == Info Icon, 1 == OK button only
	Msgbox "Deleted Sametime Meeting", 64 + 1, "Success!"
	
getOut:
	Exit Sub
	
errHandler:
	Select Case Err
		Case 1000
			errtxt = Error$
		Case 1001 To 1050
			errtxt = Error$ &amp; " [L: " &amp; Str(Erl) &amp; "]"
		Case 1401
			Set credDoc = getCredentialsDoc(thisDb, "sametime")
			If Not(credDoc Is Nothing) Then rbool = getNewSTTokens(credDoc)
			Call credDoc.Computewithform(False, False)
			Call credDoc.save(True, False, True)
			Resume refreshedToken
		Case Else
			errtxt = Error$ &amp; " [E: " &amp; Str(Err) &amp; "; L: " &amp; Str(Erl) &amp; "]"
	End Select
	
	Messagebox errtxt,, "ERROR"
	enhLogException ||, ||
	
	Resume getOut
End Sub</lotusscript></code>
<item name='$POID'><datetime dst='true'>20210521T131032,34-04</datetime></item></agent>

