<?xml version='1.0' encoding='utf-8'?>
<agent name='(DOMI_scheduleSTMeeting)' alias='DOMI_scheduleSTMeeting' xmlns='http://www.lotus.com/dxl'
 version='12.0' replicaid='8525867000756EB9' hide='v3' publicaccess='false'
 designerversion='8.5.3'>
<noteinfo noteid='1d02' unid='7880A5F5FCFF28BF6AF9DF81D77BE826' sequence='15'>
<created><datetime/></created>
<modified><datetime dst='true'>20210505T164255,88-04</datetime></modified>
<revised><datetime dst='true'>20210505T101749,33-04</datetime></revised>
<lastaccessed><datetime dst='true'>20210505T164255,87-04</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20210505T164255,87-04</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Rocky Oliver/OU=USA/O=PNPHCL</name></updatedby>
<wassignedby><name>CN=Rocky Oliver/OU=USA/O=PNPHCL</name></wassignedby>
<designchange><datetime dst='true'>20210505T101749,32-04</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='runonce'/><code event='options'><lotusscript>%REM
	Agent (DOMI_scheduleSTMeeting)
	Created Mar 01, 2021 by Rocky Oliver/USA/PNPHCL
	Description: This agent is used to schedule a Sametime meeting and update the corresponding Calendar 
	Entry
	
**************** LICENSE ****************
	Copyright 2021 HCL America, Inc.
	Licensed under the Apache License, Version 2.0 (the "License"); you may Not Use this file except 
	In compliance With the License. You may obtain a copy of the License at
	
	http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law Or agreed To In writing, software distributed under the License 
	Is distributed On an "AS IS" BASIS, WITHOUT WARRANTIES Or CONDITIONS OF Any KIND, either express 
	Or implied. See the License For the specific language governing permissions And limitations under 
	the License
%END REM
	
Option Public
Option Declare

Use "domiSTUtilsBE"
Use "domiUtilsFE"
Use "VoltMXHttpHelper" ' this is the wrapper lib for all libs/classes needed for Volt MX integration
Use "JSONDateTime"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Dim s As New NotesSession, ws As New NotesUIWorkspace
	Dim curUIDoc As NotesUIDocument, curDoc As NotesDocument, credDoc As NotesDocument
	Dim thisDb As NotesDatabase, thisAgent As NotesAgent
	Dim startDT As NotesDateTime, endDT As NotesDateTime, startITC As String, endITC As String
	Dim timeDiff As Long, bodyTxt As String
	Dim urlMtg As String, urlBase As String, urlChk As String
	Dim tmpToken As String, tmpCookie As String, fullCookie As String
	Dim authToken As String
	Dim loginEmail As String
	Dim nrest As NotesRESTConsumer
	Dim httpRequest As NotesHTTPRequest
	Dim jsonNav As NotesJSONNavigator, jsonStr As String, jsonEl As NotesJSONElement
	Dim jsonObj As NotesJSONObject, jsonArr As NotesJSONArray
	Dim badList List As string
	Dim hdrList As New stringList(), paramList As New variantList(), mtgList As New variantList(), updateList As New VariantList()
	Dim subj As String
	Dim rstr As String, rlng As Long, rdbl As Double, rbool As Boolean, rdoc As NotesDocument, rint As Integer, rvar As Variant, emptyvar As Variant
	Dim errtxt As String
	
	On Error GoTo errHandler
	Call instantiateDOMIlog() ' Instantiate Logging and set options for DOMI operations
	
	Set thisDb = s.Currentdatabase
	Set thisAgent = s.Currentagent
		Set curUIDoc = ws.Currentdocument
	If curUIDoc Is Nothing Then
		Error 1000, "Unable to get a handle to the current document"
	Else
		Set curDoc = curUIDoc.Document
	End If
	If Not(curDoc.getItemValue("Form")(0) = "Appointment") Then Error 1000, "This action must be run from a Calendar Entry"
	
	' The online meeting platforms all require date/time values to be presented as strings in the ITC format - yyyy-mm-ddThh:mm:ss offset, 
	' e.g. 2021-02-11T16:00:00-0500
	rint = domiUIValidateCalendarEntry(curDoc, startDT, endDT)  ' in domiUtilsFE
	If rint &gt; 0 Then
		Exit Sub
	End If
	
	startITC = notesDateTimeToJson(startDT)  ' in JsonDateTime
	endITC = notesDateTimeToJson(endDT)
	timeDiff = endDT.Timedifference(startDT)/60  
	
	bodyTxt = curUIDoc.Fieldgettext("Body")
	
	subj = cleanupSTMeetingName(curDoc.Getitemvalue("Subject")(0))  ' in domiUtilsBE
	If subj = "" Then Error 1000, "Problem cleaning up Calendar Entry Name"
	subj = subj &amp; "_" &amp; atUniqueID()  ' in domiUtilsBE
	
	updateList.content("meetingTitle") = subj
	updateList.content("meetingStartStr") = startITC
	updateList.content("meetingEndStr") = endITC
	updateList.content("meetingDuration") = timeDiff
	updateList.content("meetingAgenda") = bodyTxt
	
	urlBase = DOMI_ROOTURL_SAMETIMEMEETINGS
	If urlBase = "" Then Error 1000, "The Sametime Meetings URL is not defined. Please contact your administrator."
	If Not(Right(urlBase, 1) = "/") Then urlBase = urlBase &amp; "/"
	urlMtg = urlBase &amp; "meeting-catalog/api/v1/meetings"
	urlChk = urlBase &amp; "meeting-auth/api/v1/refresh"
	' get some tokens
refreshedToken:
	authToken = getServiceToken("sametime", DOMI_TOKEN_AUTH) ' in domiUtilsBE
	If authToken = "" Then Error 1000, "Problem obtaining auth Token from Online Meeting Credentials"
	tmpToken = authToken
	%REM
		Returns a list containing the following values:
		sametimeJwt=  the sametime JWT token
		sametimeRefresh= the sametime Refresh token
		x-csrf-token: the x-csrf-token needed for request Header
		_csrf= the csrf value for the request cookie
	%END REM
	rvar = getSTHeaderTokens(urlChk, tmpCookie, tmpToken)  ' in domiUtilsBE
	
	loginEmail = getServiceEmail("sametime")  ' in domiUtilsBE
	
	' schedule st meeting
	fullCookie = "_csrf=" &amp; rvar("_csrf=") &amp; "; sametimeJwt=" &amp; rvar("sametimeJwt=")
	hdrList.content("accept") = "application/json"
	hdrList.content("X-CSRF-Token") = rvar("x-csrf-token: ")
	hdrList.content("cookie") = fullCookie
	
	' parameters for setting up the meeting
	ReDim emailArr(0) As String
	emailArr(0) = loginEmail
	paramList.content("name") = subj
	paramList.content("moderators") = emailArr
	paramList.content("allowGuestUser") = "false"
	paramList.content("mode") = "Open"
	
	Set mtgList.content("meeting") = paramList
	
	Set nrest = New NotesRESTConsumer(DOMI_JSON_NODES_EXCLUDE_FROM_LOG)  ' in NotesRESTConsumer
	
	Set jsonNav = s.Createjsonnavigator("")
	rstr = nrest.httpPOST(urlMtg, hdrList, mtgList, jsonNav)
	rint = nrcParseResponseCode(rstr)
	If rint &lt;&gt; 200 Then Error (1000 + rint), "Problem creating meeting (" &amp; rstr &amp; ")"
	
	jsonStr = jsonNav.Stringify() 
	updateList.content("meetingJSON") = jsonStr
	
	Call updateSTCalendarEntry(curDoc, updateList)

	Call curUIDoc.Reload()
	
	' 64 == Info Icon, 1 == OK button only
	MsgBox "Created Sametime Meeting", 64 + 1, "Success!"
getOut:
	Exit Sub
	
errHandler:
	Select Case Err
		Case 1000
			errtxt = Error$
		Case 1001 To 1050
			errtxt = Error$ &amp; " [L: " &amp; Str(Erl) &amp; "]"
		Case 1401
			Set credDoc = getCredentialsDoc(thisDb, "sametime")
			If Not(credDoc Is Nothing) Then rbool = getNewSTTokens(credDoc)
			Call credDoc.Computewithform(False, False)
			Call credDoc.save(True, False, True)
			Resume refreshedToken
		Case Else
			errtxt = Error$ &amp; " [E: " &amp; Str(Err) &amp; "; L: " &amp; Str(Erl) &amp; "]"
	End Select
	
	MessageBox errtxt,, "ERROR"
	enhLogException ||, ||
	
	Resume getOut
End Sub


</lotusscript></code>
<rundata processeddocs='0' exitcode='0'>
<agentmodified><datetime dst='true'>20210505T101749,29-04</datetime></agentmodified></rundata></agent>

