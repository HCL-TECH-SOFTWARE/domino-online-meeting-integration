<?xml version='1.0' encoding='utf-8'?>
<agent name='01. Install DOMI in Target Mail Db' alias='installDOMI' xmlns='http://www.lotus.com/dxl'
 version='11.0' maintenanceversion='1.0' replicaid='852586DC005D7BD2' hide='v3'
 publicaccess='false' designerversion='8.5.3'>
<noteinfo noteid='22a' unid='EBA8109DDBD87E8E3360BF6D4A230B2A' sequence='7'>
<created><datetime>126470630T191646,02-0345</datetime></created>
<modified><datetime dst='true'>20210521T131033,74-04</datetime></modified>
<revised><datetime dst='true'>20210521T131033,73-04</datetime></revised>
<lastaccessed><datetime dst='true'>20210521T131033,73-04</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20210521T130113,70-04</datetime></addedtofile></noteinfo>
<updatedby><name>CN=Devin Olson/OU=USA/O=PNPHCL</name></updatedby>
<wassignedby><name>CN=Devin Olson/OU=USA/O=PNPHCL</name></wassignedby>
<designchange><datetime dst='true'>20210521T131033,69-04</datetime></designchange>
<trigger type='actionsmenu'/>
<documentset type='runonce'/><code event='options'><lotusscript>%REM
	Agent Install OMI in Target Mail Db
	Created Feb 16, 2021 by Rocky Oliver/USA/PNPHCL
	Description: This agent is used to install the design elements needed for OMI into the desired mail database
	or template. 
%END REM
Option Public
Option Declare

Use "dxlUtilsBE"
Use "domiUtilsBE"

</lotusscript></code><code event='initialize'><lotusscript>Sub Initialize
	Dim s As New NotesSession, ws As New NotesUIWorkspace
	Dim thisDb As NotesDatabase, mailDb As NotesDatabase
	Dim deView As NotesView, deDoc As NotesDocument
	Dim dbPathInfo As Variant, deTypes List As String
	Dim deType As String, deName As String, deUNID As String, newUNID As String
	Dim oldNote As NotesDocument, newNote As NotesDocument, checkForm As NotesDocument
	Dim rbool As Boolean
	
	On Error Goto errHandler
	
	Set thisDb = s.Currentdatabase
	
	' sync the design element unids with the corresponding design element profiles
	Call resyncDEProfiles(thisDb)  ' in dxlUtilsBE
	
	Set deView = thisDb.getView("beFeatureSetDEProfiles")
	If deView Is Nothing Then Error 1000, "Unable to find Design Element Profile view"
	deView.Autoupdate = False
	
	' prompt for target mail db
	' 13 is the value for ChooseDatabase
	dbPathInfo = ws.Prompt(13, "Choose Mail Database", "Choose the Mail database or template")
	If Isarray(dbPathInfo) Then
		Set mailDb = s.Getdatabase(dbPathInfo(0), dbPathInfo(1), False)
		If Not(mailDb.Isopen) Then Error 1000, "Unable to open selected database"
		' Check Appointment form exists in target
		Set checkform = getElementHandle(mailDb, "form", "Appointment")
		If (checkform Is Nothing) Then Error 1000, "Cannot find Appointment form in target database, " &amp; _
		 "installation can only be performed on Mail templates / databases.  "
	Else
		Exit Sub
	End If
	
	deTypes("AGENT - LS") = "agent"
	deTypes("FORM") = "form"
	deTypes("SCRIPT LIBRARY - LS") = "scriptlib"
	deTypes("SUBFORM") = "subform"
	deTypes("VIEW") = "view"
	
	Set deDoc = deView.Getfirstdocument()
	Do While Not(deDoc Is Nothing)
		Set oldNote = Nothing
		deName = columnValStr(deDoc, 0)
		deType = columnValStr(deDoc, 2)
		deUNID = columnValStr(deDoc, 3)
		' change the UNIDs of agent and script lib elements to make sure there's no problems with import
		If Ucase(deType) = "SCRIPT LIBRARY - LS" Or Ucase(deType) = "AGENT - LS" Then
			newUNID = replaceDEUNID(deDoc) ' in domiUtilsBE
			deUNID = newUNID
		End If
		
		' first see if the element already exists - if it does, nuke it
		Set oldNote = getElementHandle(mailDb, deTypes(Ucase(deType)), deName)  ' in dxlUtilsBE
		If Not(oldNote Is Nothing) Then Call oldNote.RemovePermanently(True)
		Set oldNote = Nothing
		
		' now copy over the new element
		Set newNote = thisDb.Getdocumentbyunid(deUNID)
		If newNote Is Nothing Then Error 1000, "Unable to find Design Element (" &amp; deName &amp; ") by UNID (" &amp; deUNID &amp; ")"
		Call newNote.Copytodatabase(mailDb)
		
		Set deDoc = deView.Getnextdocument(deDoc)
	Loop
	
	' Now let's add the subform to the Calendar Entry
	rbool = addDOMISubformToAppointment(mailDb)
	
	If rbool Then Msgbox "DOMI installation successful.",,"Success!"
	
getOut:
	Exit Sub
errHandler:
	Select Case Err
		Case 1000
			Msgbox Error$,48 , "Error"
		Case 4005
			Msgbox Error$ &amp; Chr(10) &amp; "(Element Name: " &amp; deName &amp; ")",, "Error"
		Case Else
			Msgbox Error$ &amp; " (err: " &amp; Err &amp; ", erl: " &amp; Erl &amp; ")",48 , "Error"
	End Select
	Resume getOut
End Sub



</lotusscript></code><code event='addDOMISubformToAppointment'><lotusscript
>%REM
	Function addOMISubformToAppointment
	Description: Comments for Function
%END REM
Function addDOMISubformToAppointment(mailDb As NotesDatabase) As Boolean
	Dim s As New NotesSession
	Dim formobj As NotesDOMParser, sform As String
	Dim oldform As NotesDocument
	Dim oldCode As String, newCode As String, sftag As String
	Dim fstream As NotesStream, formcode As String, lf As String
	Dim rlng As Long, rbool As Boolean, errtxt As String
	
	lf = Chr(10)
	oldCode = "&lt;/richtext&gt;&lt;/body&gt;"
	sftag = "&lt;subformref name='DOMI_onlineMeetingActions | onlineMeetingActions'/&gt;"
	newCode = sftag &amp; lf &amp; oldCode

	Set oldform = getElementHandle(mailDb, "form", "(BACKUP-DOMI-Appointment)")
	If Not(oldform Is Nothing) Then Call oldform.Removepermanently(True)
	Set oldform = Nothing
	
	' getElementDXL(db As NotesDatabase, etype As String, formname As String, bkupkey As String, _
	' oldnote As NotesDocument) As NotesDOMParser
	Set formobj = getElementDXL(maildb, "form", "Appointment", "DOMI", oldform)  ' from dxlUtilsBE
	Set fstream = s.CreateStream
	' this part puts the form DXL into a string var
	Call formobj.setOutput(fstream)
	Call formobj.Serialize
	fstream.Position = 0
	formcode = fstream.ReadText
	Call fstream.Close
	
	' check to see if the tag is already in the subform; if so, our work here is done
	If Instr(1, formcode, sftag, 5) &gt; 0 Then
		addDOMISubformToAppointment = True
		Exit Function
	End If

	formcode = Replace(formcode, oldCode, newCode)
	
	Set fstream = s.createStream
	rlng = fstream.Writetext(formcode)
	rbool = importDXLStream(mailDb, fstream, True, False, False, False)  ' from dxlUtilsBE
	
	addDOMISubformToAppointment = rbool
getOut:
	Exit Function
errHandler:
	addDOMISubformToAppointment = False
	errtxt = Error$ &amp; " [in: " &amp; Getthreadinfo(1) &amp; "; err: " &amp; Err &amp; "; line: " &amp; Erl &amp; "]"
	On Error Goto 0

	Error Err, errtxt
	Resume getOut
End Function</lotusscript></code>
<rundata processeddocs='0' exitcode='0'>
<agentmodified><datetime dst='true'>20210521T130524,03-04</datetime></agentmodified></rundata></agent>

